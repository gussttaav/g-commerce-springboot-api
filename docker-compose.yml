# Full deployment configuration - both app and database
services:
  app:
    build: .
    image: g-commerce-backend
    ports:
      - "8080:8080"
    env_file:
      - .env
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/${MYSQL_DATABASE}
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - spring-mysql-network

  mysql:
    build:
      context: .
      dockerfile_inline: |
        FROM mysql:9
        COPY mysql-init/shopping_db.sql /docker-entrypoint-initdb.d/
        CMD ["mysqld"]
    image: g-commerce-mysql
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_CHARSET: ${MYSQL_CHARSET}
      MYSQL_COLLATION: ${MYSQL_COLLATION}
    ports:
      - "3306:3306"
    volumes:
      - mysql-data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - spring-mysql-network

volumes:
  mysql-data:

networks:
  spring-mysql-network:
    driver: bridge